function getSpellCasterLevelModification(){let e=parseInt(document.getElementById("scl").value);return Math.floor((e+1)/6)}function spellListSelect(){return spellArray=Array.from(spellMap.keys(),e=>({value:e,text:e})),[{label:"Cantrips",options:spellArray.filter(e=>0==spellMap.get(e.text).spellSlot)},{label:"Level 1",options:spellArray.filter(e=>1==spellMap.get(e.text).spellSlot)},{label:"Level 2",options:spellArray.filter(e=>2==spellMap.get(e.text).spellSlot)},{label:"Level 3",options:spellArray.filter(e=>3==spellMap.get(e.text).spellSlot)},{label:"Level 4",options:spellArray.filter(e=>4==spellMap.get(e.text).spellSlot)},{label:"Level 5",options:spellArray.filter(e=>5==spellMap.get(e.text).spellSlot)},{label:"Level 6",options:spellArray.filter(e=>6==spellMap.get(e.text).spellSlot)},{label:"Level 7",options:spellArray.filter(e=>7==spellMap.get(e.text).spellSlot)},{label:"Level 8",options:spellArray.filter(e=>8==spellMap.get(e.text).spellSlot)},{label:"Level 9",options:spellArray.filter(e=>9==spellMap.get(e.text).spellSlot)}]}function addSpellsToSelect(){select=new SlimSelect({select:"#spellsSelect",data:spellListSelect(),onChange:function(){calculateSpellDamage()}})}function setSpellDamage(e,l){document.getElementById("spellDmg1").innerHTML=e[0],document.getElementById("spellDmg2").innerHTML=e[1],document.getElementById("spellDmg3").innerHTML=e[2],document.getElementById("spellUsed1").innerHTML=l[0],document.getElementById("spellUsed2").innerHTML=l[1],document.getElementById("spellUsed3").innerHTML=l[2],history.pushState({},"WC5e CR Calculator","?"+generateUrl())}function calculateSpellDamage(){let e=[parseInt(document.getElementById("ss1").value),parseInt(document.getElementById("ss2").value),parseInt(document.getElementById("ss3").value)];if(!select)return setSpellDamage([0,0,0],["","",""]);let l=select.selected();if(0==l.length)return setSpellDamage([0,0,0],["","",""]);let t=[3],a=[3];for(i=0;i<3;i++){let s=0,n="";l.forEach(l=>{let t=spellMap.get(l);t.spellSlot<=e[i]&&(spelldmg=t.calcDamage(e[i]))>s&&(s=spelldmg,n=l)}),t[i]=s,a[i]=n}setSpellDamage(t,a)}function transferDamage(){let e=document.getElementById("spellDmg1").innerHTML,l=document.getElementById("spellDmg2").innerHTML,t=document.getElementById("spellDmg3").innerHTML;return document.getElementById("pDmg1").value=e,document.getElementById("sDmg1").value=0,document.getElementById("pDmg2").value=l,document.getElementById("sDmg2").value=0,document.getElementById("pDmg3").value=t,document.getElementById("sDmg3").value=0,document.getElementById("pDmg4").value=0,document.getElementById("sDmg4").value=0,document.getElementById("pDmg5").value=0,document.getElementById("sDmg5").value=0,document.getElementById("pDmg6").value=0,document.getElementById("sDmg6").value=0,Calculate(),!1}class Spell{constructor(e,l,t,a){this.baseDamage=e,this.scalingDamage=l,this.spellSlot=t,this.aoe=a}calcDamage(e){return Math.floor(this.baseDamage+(e-this.spellSlot)*this.scalingDamage)*(this.aoe?2:1)}}class Cantrip extends Spell{constructor(e,l,t){super(e,l,0,t)}calcDamage(e){return Math.floor(this.baseDamage+this.scalingDamage*getSpellCasterLevelModification())*(this.aoe?2:1)}}class ComplexSpell extends Spell{constructor(e,l){super(0,0,e,!1),this.damageFormula=l}calcDamage(e){return this.damageFormula(e)}}Object.defineProperty(Map.prototype,"addSpells",{value:function(){return addSpellsToMap(this)},writable:!0,configurable:!0});let spellMap=(new Map).addSpells(),select=null;